<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Expense Tracker</title>

    <style>
        body{
            /* background-color: rgb(223, 238, 177); */
            background-color: #5CDB95;
            display: flex;
            flex-direction: column;
            align-items: center;
            margin: 0;
            padding: 0;
        }
        .navBar{
            width: 100%;
            background-color: #379683;
            padding: 10px;
            display: flex;
            flex-direction: row-reverse;
        }
        .navBar a{
            margin-right: 30px;
            text-decoration: none;
            color: white;
            font-size: 18px;
        }
        .navBar a:hover{
            color: #05386B;
        }
        .main{
            display: flex;
            flex-direction: row;
        }
        form{
            padding: 6px;
            font-size: 20px;
            font-weight: 600;
            display: flex;
            flex-direction: column;
            align-items: center;
            color: white;
        }
        form input, form select{
            padding: 4px;
            border-radius: 10px;
            margin: 5px 10px;
            width: 60%;
        }
        .container{
            margin-top: 30px;
            margin-right: 80px;
            background-color: #05386B;
            padding: 40px;
            font-size: 18px;
            border-radius: 10px;
            box-shadow: 10px 10px 8px #b6d970;
        }
        table,tr,td,th{
            padding: 8px;
            border: 1.5px solid black;
            border-collapse: collapse;
            background-color: #05386B;
            color: white;
        }
        th{
            font-size: 20px;
        }
        td{
            font-size: 18px;
        }
        .delBtn{
            cursor: pointer;
            font-size: 16px;
            font-weight: 500;
            background-color: #8EE4AF;
            border-radius: 10px;
            padding: 3px;
        }
        .submitBtn{
            cursor: pointer;
            font-size: 16px;
            font-weight: 500;
            background-color: #8EE4AF;
            border-radius: 10px;
            padding: 6px;
        }
        button:hover{
            background-color: #379683;
        }
    </style>
</head>

<body>
    <nav class="navBar">
        <!-- <div class="premium"></div>
        <button id="premiumbutton">Buy Premium</button>
        <a href="/" >Logout</a> -->
        <h6 id="premiumuser"></h6>
        <button id="premiumbutton">Buy Premium</button>
        <button id="leaderBoard" hidden>Show Leaderboard</button>
    </nav>
    <h1>Welcome to our Expense Tracker App!</h1>
    <div class="main">
        <div class="container">
            <form action="/expense/<%= userId %>" method="post">
                <label for="amount">Choose expense amount:</label>
                <input type="number" name="amount" id="amount" required>
                <br>
                <label for="description">Write Description:</label>
                <input type="text" name="description" id="description">
                <br>
                <label for="category">Choose Category:</label>
                <select name="category" id="category">
                    <option value="fuel">Fuel</option>
                    <option value="ration">Ration</option>
                    <option value="food">Food</option>
                    <option value="electricity">Electricity</option>
                    <option value="movie">Movie</option>
                    <option value="shopping">Shopping</option>
                </select>
                <br>
                <button type="submit" class="submitBtn">Submit</button>
            </form>
        </div>
    
        <div>
            <h2>List of expenses</h2>
            <table>
                <thead>
                    <tr>
                        <th>Description</th>
                        <th>Amount</th>
                        <th>Category</th>
                        <th>Delete</th>
                    </tr>
                    <tbody>
                        <% expenses.forEach(expense => {%>
                        <tr>
                            <td><%= expense.description %></td>
                            <td><%= expense.amount %></td>
                            <td><%= expense.category%></td>
                            <td>
                                <form action="/deleteExpense/<%= expense.id%>" method="post">
                                    <button type="submit" class="delBtn">Delete</button>
                                </form>
                            </td>
                        </tr>
                        <% }); %>
                    </tbody>
                </thead>
            </table>
    
        </div>
    </div>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js"></script>
    <script>
    
        
        const leaderBoardBtnId = document.getElementById('leaderboard');
        leaderBoardBtnId.addEventListener('onclick', leaderBoardBtn);
        
        async function leaderBoardBtn(e){
            e.preventDefault();
            const response = await axios.get('http://localhost:4000/totalExpense');
            console.log(response);
        }

        const token = localStorage.getItem('token');
        
      document.getElementById('premiumbutton').onclick = async function(e){
        e.preventDefault();
    
        try{
        const response = await axios.get(`http://localhost:4000/expense/:id`, { headers: {"Authorization": token}})
        console.log("Response>>>>>>>>",response,response.data.orderid, response.data.key_id); //response will contain orderid
    
        var options = {
            "key": 'rzp_test_w9RAuqqQaVeilM', 
            "order_id": response.data.orderid, //for one time payment
            // a handler function to handle the success payment
            "handler": async function(response){
                try{
                await axios.post('http://localhost:4000/razorpay/callback',
                {order_id: options.order_id, payment_id: response.razorpay_payment_id,},
                {headers: {"Authorization": token} });
    
                alert('You are a premium user now');

                document.getElementById('premiumbutton').style.visibility = "hidden";
                document.getElementByClass('premium').innerHTML = "You are premium user now!";
                document.getElementById('leaderBoard').style.visibility = "visible";

                localStorage.setItem('token', res.data.token);

                }catch(err){
                    console.log(err);
                }
                
            } 
  
        }
  
        const rzp1 = new Razorpay(options);
        rzp1.open(); 
        rzp1.on("payment.failed", function (response) {
          console.log(response)
          alert("Payment Failed!")
      });
      } catch (err) {
          console.error(err);
      }
    }

//     const token = localStorage.getItem('token');

// function parseJwt (token) {
//   var base64Url = token.split('.')[1];
//   var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
//   var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function(c) {
//       return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
//   }).join(''));
//   return JSON.parse(jsonPayload);
// }


// window.addEventListener("DOMContentLoaded", () => {
//    const decodedToken = parseJwt(token);
//    const ispremiumuser = decodedToken.ispremiumuser;
   
//    if(ispremiumuser)showPremiumUser();
   
//     const amount = document.getElementById('amount');
//     const description = document.getElementById('description');
//     const field = document.getElementById('field');
//     const addbutton = document.getElementById('addbutton');
//     addbutton.addEventListener('click', (event)=>{
//     event.preventDefault();
//     const amountValue = amount.value;
//     const descriptionValue = description.value;
//     const fieldValue = field.value;  
//     const obj = {amount: amountValue, description: descriptionValue, field:fieldValue};
      
//       axios
//            .post("http://localhost:3000/expense/addExpense", obj, {headers:{"Authorization": token}})
//            .then((response)=>{
    
//             if(response.status === 200){
//               showExpensesOnScreen(obj);
//             }
          
//            })
//            .catch((err)=>{
//                     console.log("Error Saving to database", err);
//            })
//     })


//     //fetching and displaying expenses when the page loads 
//     axios
//       .get("http://localhost:3000/expense/getExpenses",{headers: {"Authorization": token}})
//       .then((res) => {
//         res.data.expenses.forEach(expense => {
//           showExpensesOnScreen(expense);
          
//         });

//       })
//       .catch((err) => {
       
//       });
//   });




//   function showExpensesOnScreen(obj){

//     const table = document.getElementById("table")
//     const row = document.createElement('tr');          

//     const amountData = document.createElement('td');    
//     amountData.textContent = `${obj.amount}`;
//     row.appendChild(amountData);

//     const descriptionData = document.createElement('td');    
//     descriptionData.textContent = `${obj.description}`;
//     row.appendChild(descriptionData);

//     const fieldData = document.createElement('td');    
//     fieldData.textContent = `${obj.field}`;
//     row.appendChild(fieldData);

//     const deleteCell = document.createElement("td");
//     const deleteButton = document.createElement("button");
//     deleteButton.textContent = "Delete";
//     deleteButton.className = "delete-button";

//     deleteButton.onclick = () => {
//     const confirmDelete = confirm("Are you sure you want to delete this expense?")
//     if(!confirmDelete) return;
//     axios
//     .delete(`http://localhost:3000/expense/deleteExpense/${obj.id}`, {headers: {"Authorization": token}})
//     .then(() => {
//      table.removeChild(row);
//       console.log("Expense deleted successfully");
//     })
//     .catch((err) => {
//       console.log("There is an error deleting expense", err);
//     });
// };

//     deleteCell.appendChild(deleteButton);
//     row.appendChild(deleteCell);
//     table.appendChild(row);
//     document.getElementById("form").reset();
// }



// // handling eventlistener on premium button
//   document.getElementById('premiumbutton').onclick = async function(e){
//     e.preventDefault();

//     try{
//     const response = await axios.get('http://localhost:3000/purchase/premiummembership', { headers: {"Authorization": token}})
//     console.log("Response>>>>>>>>",response,response.data.orderid, response.data.key_id); //response will contain orderid

//     var options = {
//       "key": response.data.key_id, 
//       "order_id": response.data.orderid, //for one time payment
//       // a handler function to handle the success payment
//       "handler": async function(response){
//           try{
//             await axios.post('http://localhost:3000/purchase/updatetransactionstatus',
//             {order_id: options.order_id, payment_id: response.razorpay_payment_id,},
//             {headers: {"Authorization": token} });

//             alert('You are a premium user now');
//            localStorage.setItem('token', response.data.token); //payment token
//             showPremiumUser();

//             }catch(err){
//               console.log(err);
//             }
           
//             //showLeaderboard();
//         } 

//       }

//       const rzp1 = new Razorpay(options);
//       rzp1.open(); 
//       rzp1.on("payment.failed", function (response) {
//         console.log(response)
//         alert("Payment Failed!")
//     });
//   } catch (err) {
//     console.error(err);
//   }
//   }


//   function showPremiumUser(){
//     const premiumButton = document.getElementById('premiumbutton');
//     premiumButton.style.display = 'none';
//     const leaderboardBtn = document.getElementById('leaderboardbtn');
//     leaderboardBtn.style.display = 'inline-block';
//     document.getElementById('premiumuser').innerHTML = 'Premium Member';

//     leaderboardBtn.onclick = async()=>{
//       try{
//       const leaderboardArray = await axios.get('http://localhost:3000/premium/showLeaderboard', { headers: { "Authorization": token } })

//         for(let i=0; i<leaderboardArray.data.length; i++){
//           let obj = leaderboardArray.data[i];
//           const table = document.getElementById("leaderboardtable")
//           const row = document.createElement('tr');          
      
//           const rankData = document.createElement('td');    
//           rankData.textContent = `${i+1}`;
//           row.appendChild(rankData);
      
//           const totalData = document.createElement('td');    
//           totalData.textContent = `${obj.total??0}`;
//           row.appendChild(totalData);
      
//           const nameData = document.createElement('td');    
//           nameData.textContent = `${obj.name}`;
//           row.appendChild(nameData);
  
//           table.appendChild(row);
//         }
//        }catch(err){
//       console.log('Error fetching Leaderboard', err);
//       }
  
//      }
//   }
    </script>
</body>
</html>